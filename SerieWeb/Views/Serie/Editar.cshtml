@model SerieWeb.Models.Admininstracao.Serie

@{
    ViewBag.Title = "Editar";
    var Generos = (List<SerieWeb.Models.Admininstracao.Genero>)ViewBag.Generos;
    var Servicos = (List<SerieWeb.Models.Admininstracao.ServicoStreaming>)ViewBag.Servicos;
    var GeneroSelecionado = (List<int>)ViewBag.GeneroSelecionado;
    var ServicoSelecionado = (List<int>)ViewBag.ServicoSelecionado;
    var count = 0;
    @Scripts.Render("~/bundles/popper")
}


<div class="panel-header panel-header-sm">

</div>
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="content" style="padding: 0; min-height: calc(100vh - 123px); margin-top: -50px; margin-bottom:100px;">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <h4 class="title">Editar Série</h4>
                        </div>
                        <div class="card-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.SerieID)
                            <div class="row">
                                <div class="col-md-12 pr-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NomeSerie, htmlAttributes: new { @class = "control-label col-md-6 font-weight-bold" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.NomeSerie, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NomeSerie, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 pr-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Sinopse, htmlAttributes: new { @class = "control-label col-md-6 font-weight-bold" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Sinopse, new { htmlAttributes = new { @class = "form-control", rows = "4", cols = "80" } })
                                            @Html.ValidationMessageFor(model => model.Sinopse, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 pr-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Imagem, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Imagem, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 pr-2">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Trailer, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Trailer, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Trailer, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        <label class="control-label col-md-8 font-weight-bold">Gênero</label>
                                        <div class="col-md-12">
                                            <select class="custom-select col-md-12" id="Generos" name="ListGeneros" multiple="multiple">
                                                @if (GeneroSelecionado != null)
                                                {
                                                    foreach (var item in Generos)
                                                    {
                                                        if (GeneroSelecionado.Contains(item.GeneroID))
                                                        {
                                                            <option value="@item.GeneroID" selected>@item.NomeGenero</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@item.GeneroID">@item.NomeGenero</option>
                                                        }
                                                        count++;
                                                    }
                                                }
                                                else
                                                {
                                                    foreach (var item in Generos)
                                                    {
                                                        <option value="@item.GeneroID">@item.NomeGenero</option>

                                                        count++;
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 pr-1">
                                    <div class="form-group">
                                        <label class="control-label col-md-12 font-weight-bold">Servico de Streaming</label>
                                        <div class="col-md-12">
                                            <select class="custom-select col-md-12 " id="Servicos" name="ListServicos" multiple="multiple">
                                                @if (ServicoSelecionado != null)
                                                {
                                                    foreach (var item in Servicos)
                                                    {
                                                        if (ServicoSelecionado.Contains(item.ServicoStreamingID))
                                                        {
                                                            <option value="@item.ServicoStreamingID" selected>@item.NomeServicoStreaming</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@item.ServicoStreamingID">@item.NomeServicoStreaming</option>
                                                        }
                                                        count++;
                                                    }
                                                }
                                                else
                                                {
                                                    foreach (var item in Servicos)
                                                    {
                                                        <option value="@item.ServicoStreamingID">@item.NomeServicoStreaming</option>

                                                        count++;
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 px-1">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Nota, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Nota, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Nota, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div>
                                <div class="float-right" style="margin-right:25px">
                                    @Html.ActionLink("Voltar", "Index", new object { }, new { @class = "badge badge-secondary" })
                                    <input type="submit" value="Salvar" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/BootstrapMultiselect")
    <script>
        $(document).ready(function () {
            $('#Servicos').multiselect({
                includeResetOption: true,
                maxHeight: 100,
                buttonClass: 'btn btn-Light col-md-12',
                buttonContainer: '<div />',
                buttonText: function (options, select) {
                    if (options.length === 0) {
                        return 'Nenhuma Serviços selecionado';
                    }
                    else if (options.length == @count) {
                        return 'Todas os Serviços Selecionadas';
                    }
                    else if (options.length > 3) {
                        return '' + options.length +' Serviços Selecionados';
                    }
                    else {
                        var labels = [];
                        options.each(function () {
                            if ($(this).attr('label') !== undefined) {
                                labels.push($(this).attr('label'));
                            }
                            else {
                                labels.push($(this).html());
                            }
                        });
                        return labels.join(', ') + '';
                    }
                }
            });
            $('#Generos').multiselect({
                includeResetOption: true,
                maxHeight: 100,
                buttonClass: 'btn btn-Light col-md-12',
                buttonContainer: '<div />',
                buttonText: function (options, select) {
                    if (options.length === 0) {
                        return '                  Nenhuma Gênero selecionada                   ';
                    }
                    else if (options.length == @count) {
                        return '                 Todos os Gêneros Selecionados                 ';
                    }
                    else if (options.length > 3) {
                        return '' + options.length +' Gêneros Selecionados';
                    }
                    else {
                        var labels = [];
                        options.each(function () {
                            if ($(this).attr('label') !== undefined) {
                                labels.push($(this).attr('label'));
                            }
                            else {
                                labels.push($(this).html());
                            }
                        });
                        return labels.join(', ') + '';
                    }
                }
            });

        });


    </script>
}
